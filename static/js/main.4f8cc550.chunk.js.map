{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Contact.js","components/Footer.js","resume_data.js","App.js","service_worker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","onClick","portfolioClick","contactClick","name","style","color","fontFamily","roleDescription","socialLinks","map","link","key","url","target","rel","Component","About","src","alt","about","email","linkedIn","Resume","education","index","UniversityName","Major","MonthOfStarting","YearOfStarting","MonthOfPassing","YearOfPassing","Achievements","work","job","CompanyName","Title","MonthOfLeaving","YearOfLeaving","Description","descText","skillsDescription","skills","skill","toLowerCase","Porfolio","state","description","longDescription","params","setState","portfolio","item","changeModal","imgUrl","aria-hidden","desc","Contact","linkedInId","Footer","imagebaseurl","skypeid","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gNAIqBA,E,iLAGb,IAAIC,EAAaC,KAAKC,MAAMF,WAC5B,OACI,kBAAC,IAAMG,SAAP,KACI,4BAAQC,GAAK,QACT,yBAAKA,GAAK,YACN,uBAAGC,UAAY,aAAaC,KAAO,YAAYC,MAAQ,mBAAvD,qBACA,uBAAGF,UAAY,aAAaC,KAAO,IAAIC,MAAQ,mBAA/C,qBACA,wBAAIH,GAAK,MAAMC,UAAY,OACvB,wBAAIA,UAAY,WACZ,uBAAGD,GAAK,WAAWC,UAAY,eAAeC,KAAO,SAArD,WAEJ,4BACI,uBAAGF,GAAK,YAAYC,UAAY,eAAeC,KAAO,UAAtD,YAEJ,4BACI,uBAAGF,GAAK,aAAaC,UAAY,eAAeC,KAAO,WAAvD,aAEJ,4BACI,uBAAGF,GAAK,gBAAgBC,UAAY,eAAeG,QAAWP,KAAKQ,gBAAnE,YAEJ,4BACI,uBAAGL,GAAK,cAAcC,UAAY,eAAeG,QAAWP,KAAKS,cAAjE,gBAKZ,yBAAKL,UAAY,cACb,yBAAKA,UAAY,eACb,wBAAIA,UAAY,uBAAhB,IAAyCL,EAAWW,KAApD,KACA,wBACIC,MACI,CACIC,MAAO,OACPC,WAAY,eAInBd,EAAWe,iBAEhB,6BACA,wBAAIV,UAAY,UAERL,EAAWgB,aAAehB,EAAWgB,YAAYC,KAAI,SAAAC,GACjD,OACI,wBAAIC,IAAOD,EAAKP,MACZ,uBAAGL,KAAQY,EAAKE,IAAKC,OAAS,SAASC,IAAI,uBACvC,uBAAGjB,UAAaa,EAAKb,WAArB,aAUhC,uBAAGA,UAAY,cACX,uBAAGA,UAAY,eAAeC,KAAO,UACjC,uBAAGD,UAAY,oBAAf,a,GA7DQkB,aCDfC,E,iLAEb,IAAIxB,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAK,SACV,yBAAKC,UAAY,OACb,yBAAKA,UAAY,iBACb,yBAAKA,UAAY,cAAcoB,IAAM,wBAAwBC,IAAM,MAEvE,yBAAKrB,UAAY,yBACb,0CACA,+BAAKL,EAAW2B,MAAhB,KACA,yBAAKtB,UAAY,OACb,yBAAKA,UAAY,2BACb,iDACA,uBAAGA,UAAY,WACX,kCAAQL,EAAWW,KAAnB,KAAgC,6BAChC,8BAAM,uBAAGL,KAAI,iBAAcN,EAAW4B,QAAhC,IAA2C5B,EAAW4B,MAAtD,MAAwE,6BAC9E,8BAAM,uBAAGtB,KAAQN,EAAW6B,UAAtB,IAAkC7B,EAAW6B,SAA7C,gB,GAlBPN,aCAdO,E,iLAEb,IAAI9B,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAK,UACV,yBAAKC,UAAY,iBACb,yBAAKA,UAAY,4BACb,4BAAI,+CAER,yBAAKA,UAAY,yBAETL,EAAW+B,WAAa/B,EAAW+B,UAAUd,KAAI,SAACc,EAAWC,GACzD,OACI,yBAAK3B,UAAY,WAAWc,IAAOa,GAC/B,yBAAK3B,UAAY,kBACb,gCAAM0B,EAAUE,eAAhB,KACA,uBAAG5B,UAAY,QACV0B,EAAUG,MACX,0CACA,wBAAI7B,UAAU,QAAQ0B,EAAUI,gBAAhC,IAAkDJ,EAAUK,eAA5D,MAA+EL,EAAUM,eAAzF,IAA0GN,EAAUO,gBAExH,+BAAKP,EAAUQ,aAAf,YAQ5B,yBAAKlC,UAAY,YACb,yBAAKA,UAAY,4BACb,4BAAI,0CAER,yBAAKA,UAAY,yBAETL,EAAWwC,MAAQxC,EAAWwC,KAAKvB,KAAI,SAACwB,EAAKT,GACzC,OACI,yBAAK3B,UAAY,WAAWc,IAAOa,GAC/B,yBAAK3B,UAAY,kBACb,gCAAMoC,EAAIC,YAAV,KACA,uBAAGrC,UAAY,QACVoC,EAAIE,MACL,0CAAqB,wBAAItC,UAAU,QAAQoC,EAAIN,gBAA1B,IAA4CM,EAAIL,eAAhD,MAAmEK,EAAIG,eAAvE,IAAwFH,EAAII,gBAErH,wBAAIxC,UAAY,0BAERoC,EAAIK,aAAeL,EAAIK,YAAY7B,KAAI,SAAC8B,EAAUf,GAC9C,OACI,wBAAIb,IAAOa,GACNe,cAajD,yBAAK1C,UAAY,aACb,yBAAKA,UAAY,4BACb,4BAAI,4CAER,yBAAKA,UAAY,yBACb,+BAAKL,EAAWgD,kBAAhB,KACA,yBAAK3C,UAAY,QACb,wBAAIA,UAAY,UAERL,EAAWiD,QAAUjD,EAAWiD,OAAOhC,KAAI,SAACiC,EAAOlB,GAC/C,OACI,wBAAIb,IAAOa,GACP,0BAAM3B,UAAS,qBAAkB6C,EAAMC,iBAAwB,4BAAKD,gB,GA1EhF3B,aCCf6B,E,YAEjB,WAAYlD,GAAQ,IAAD,8BACf,4CAAMA,KACDmD,MAAQ,CACT1C,KAAM,OACN2C,YAAa,OACbC,gBAAiB,IALN,E,yEASPC,GAAS,IAEb7C,EAGA6C,EAHA7C,KACA2C,EAEAE,EAFAF,YACAC,EACAC,EADAD,gBAEJtD,KAAKwD,SAAS,CACV9C,KAAMA,EACN2C,YAAaA,EACbC,gBAAiBA,M,+BAIf,IAAD,OACDvD,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAK,aACV,yBAAKC,UAAY,OACb,yBAAKA,UAAY,4BACb,6DACA,yBAAKD,GAAK,oBAAoBC,UAAY,oCAElCL,EAAW0D,WAAa1D,EAAW0D,UAAUzC,KAAI,SAAC0C,EAAM3B,GACpD,OACI,yBAAK3B,UAAY,yBAAyBc,IAAOa,GAC7C,yBAAK3B,UAAY,aACb,uBAAGC,KAAO,kBAAkBE,QAAW,kBAAM,EAAKoD,YAAY,CAACjD,KAAMgD,EAAKhD,KAAM2C,YAAaK,EAAKL,YAAaC,gBAAiBI,EAAKJ,oBACjI,yBAAK9B,IAAG,UAAKkC,EAAKE,QAAUxD,UAAU,aACtC,yBAAKA,UAAY,WACb,yBAAKA,UAAY,uBACb,gCAAMsD,EAAKhD,KAAX,KACA,+BAAKgD,EAAKL,YAAV,gBAY5C,yBAAKlD,GAAK,iBAAiBC,UAAY,wBACnC,uBAAGA,UAAY,oBAAoByD,cAAY,SAC/C,yBAAKzD,UAAY,mBACb,gCAAMJ,KAAKoD,MAAM1C,KAAjB,KACA,+BAAKV,KAAKoD,MAAMC,YAAhB,KACA,wBAAIjD,UAAY,2BAERJ,KAAKoD,MAAME,iBAAmBtD,KAAKoD,MAAME,gBAAgBtC,KAAI,SAAC8C,EAAM/B,GAChE,OACI,wBAAIb,IAAOa,GACP,gCAAM+B,EAAN,iB,GAhENxC,aCDjByC,E,iLAEb,IAAIhE,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAK,WACV,yBAAKC,UAAY,oBACb,yBAAKA,UAAY,eACb,uBAAGA,UAAY,QAAf,+DAKR,yBAAKA,UAAY,OACb,2BAAOA,UAAY,gCACf,yBAAKA,UAAY,UACb,uCAAY,uBAAGC,KAAI,iBAAcN,EAAW4B,QAAhC,gCACZ,0CAAe,uBAAGtB,KAAQN,EAAW6B,UAAtB,IAAkC7B,EAAWiE,WAA7C,c,GAhBN1C,aCAhB2C,E,iLAEb,IAAIlE,EAAaC,KAAKC,MAAMF,WAC5B,OACI,gCACI,yBAAKK,UAAY,OACb,yBAAKA,UAAY,kBACb,wBAAIA,UAAY,gBAERL,EAAWgB,aAAehB,EAAWgB,YAAYC,KAAI,SAACC,EAAMc,GACxD,OACI,wBAAIb,IAAOa,GACP,uBAAG1B,KAAQY,EAAKE,KACZ,uBAAGf,UAAaa,EAAKb,mBAQjD,yBAAKD,GAAK,UACN,uBAAGC,UAAY,eAAeE,MAAQ,cAAcD,KAAO,SACvD,uBAAGD,UAAY,yB,GAvBPkB,aC4HrBvB,EA/HE,CACfmE,aAAc,mCACdxD,KAAM,iBACNsD,WAAY,iBACZpC,SAAU,8CACVuC,QAAS,mBACTrD,gBACE,iRACFC,YAAa,CACX,CACEL,KAAM,WACNS,IAAK,8CACLf,UAAW,kBAEb,CACEM,KAAM,SACNS,IAAK,mCACLf,UAAW,gBAEb,CACEM,KAAM,QACNS,IAAK,mCACLf,UAAW,mBAGfsB,MAAO,6NACPC,MAAO,4BACPG,UAAW,CACT,CACEE,eAAgB,oCAChBC,MAAO,0CACPC,gBAAiB,MACjBC,eAAgB,OAChBC,eAAgB,UAChBC,cAAe,KAGnBE,KAAM,CACJ,CACEE,YAAa,iBACbC,MAAO,2BACPR,gBAAiB,MACjBC,eAAgB,OAChBQ,eAAgB,MAChBC,cAAe,OACfC,YAAa,CACX,8JACA,kGACA,2HACA,+FACA,qFACA,6MACA,sIACA,oFACA,0FAGJ,CACEJ,YAAa,mBACbC,MAAO,uBACPR,gBAAiB,MACjBC,eAAgB,OAChBQ,eAAgB,MAChBC,cAAe,OACfC,YAAa,CACX,yFACA,uEACA,4CACA,sEAINE,kBAAmB,GACnBC,OAAQ,CAAC,QAAS,MAAO,UAAW,KAAM,SAAU,QACpDS,UAAW,CACT,CACE/C,KAAM,kBACN2C,YAAa,sBACbC,gBAAiB,CACf,iKACA,oGACA,sEAEFM,OAAQ,iCAEV,CACElD,KAAM,kBACN2C,YAAa,yBACbC,gBAAiB,CACf,kGACA,kEACA,iEAEFM,OAAQ,8BAEV,CACElD,KAAM,gCACN2C,YAAa,gCACbC,gBAAiB,CACf,sEACA,6DACA,kEAEFM,OAAQ,kCAEV,CACIlD,KAAM,oBACN2C,YAAa,yBACbC,gBAAiB,CACb,8DACA,4FACA,4EAEJM,OAAQ,6BAEZ,CACElD,KAAM,oBACN2C,YAAa,0BACbC,gBAAiB,CACf,6EACA,6CACA,4EAEFM,OAAQ,oCCtFCQ,E,iLAzBP,OACI,yBAAKhE,UAAY,OACb,kBAAC,EAAD,CACIL,WAAcA,IAElB,kBAAC,EAAD,CACIA,WAAcA,IAElB,kBAAC,EAAD,CACIA,WAAcA,IAElB,kBAAC,EAAD,CACIA,WAAcA,IAElB,kBAAC,EAAD,CACIA,WAAcA,IAElB,kBAAC,EAAD,CACIA,WAAcA,S,GApBhBuB,aCEE+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.4f8cc550.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n    Component\n} from 'react';\nexport default class Header extends Component {\n\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <React.Fragment>\n                <header id = \"home\" >\n                    <nav id = \"nav-wrap\">\n                        <a className = \"mobile-btn\" href = \"#nav-wrap\" title = \"Show navigation\"> Show navigation </a>\n                        <a className = \"mobile-btn\" href = \"#\" title = \"Hide navigation\"> Hide navigation </a>\n                        <ul id = \"nav\" className = \"nav\">\n                            <li className = \"current\">\n                                <a id = \"homeLink\" className = \"smoothscroll\" href = \"#home\"> Home </a>\n                            </li>\n                            <li>\n                                <a id = \"aboutLink\" className = \"smoothscroll\" href = \"#about\"> About </a>\n                            </li>\n                            <li>\n                                <a id = \"resumeLink\" className = \"smoothscroll\" href = \"#resume\"> Resume </a>\n                            </li>\n                            <li>\n                                <a id = \"portfolioLink\" className = \"smoothscroll\" onClick = {this.portfolioClick}> Works </a>\n                            </li>\n                            <li>\n                                <a id = \"contactLink\" className = \"smoothscroll\" onClick = {this.contactClick}> Contact </a>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <div className = \"row banner\">\n                        <div className = \"banner-text\">\n                            <h1 className = \"responsive-headline\" > {resumeData.name} </h1>\n                            <h3\n                                style = {\n                                    {\n                                        color: '#fff',\n                                        fontFamily: 'sans-serif'\n                                    }\n                                }\n                            >\n                                {resumeData.roleDescription}\n                            </h3>\n                            <hr/>\n                            <ul className = \"social\">\n                                {\n                                    resumeData.socialLinks && resumeData.socialLinks.map(link => {\n                                        return (\n                                            <li key = {link.name}>\n                                                <a href = {link.url} target = \"_blank\" rel=\"noopener noreferrer\">\n                                                    <i className = {link.className} > </i>\n                                                </a>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </div>\n\n                    <p className = \"scrolldown\">\n                        <a className = \"smoothscroll\" href = \"#about\">\n                            <i className = \"icon-down-circle\"> </i>\n                        </a>\n                    </p>\n\n                </header>\n            </React.Fragment>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nexport default class About extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id = \"about\">\n                <div className = \"row\">\n                    <div className = \"three columns\">\n                        <img className = \"profile-pic\" src = \"images/profilepic.jpg\" alt = \"\" />\n                    </div>\n                    <div className = \"nine columns main-col\">\n                        <h2> About Me </h2>\n                        <p> {resumeData.about} </p>\n                        <div className = \"row\">\n                            <div className = \"columns contact-details\">\n                                <h2> Contact Details </h2>\n                                <p className = \"address\">\n                                    <span> {resumeData.name} </span><br></br>\n                                    <span><a href = {`mailto:${resumeData.email}`}> {resumeData.email} </a></span><br/>\n                                    <span><a href = {resumeData.linkedIn}> {resumeData.linkedIn} </a></span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nexport default class Resume extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id = \"resume\">\n                <div className = \"row education\">\n                    <div className = \"three columns header-col\">\n                        <h1><span> Education </span></h1>\n                    </div>\n                    <div className = \"nine columns main-col\">\n                        {\n                            resumeData.education && resumeData.education.map((education, index) => {\n                                return (\n                                    <div className = \"row item\" key = {index}>\n                                        <div className = \"twelve columns\">\n                                            <h3> {education.UniversityName} </h3>\n                                            <p className = \"info\">\n                                                {education.Major}\n                                                <span> &bull; </span>\n                                                <em className=\"date\">{education.MonthOfStarting} {education.YearOfStarting} - {education.MonthOfPassing} {education.YearOfPassing}</em>\n                                            </p>\n                                            <p> {education.Achievements} </p>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className = \"row work\">\n                    <div className = \"three columns header-col\">\n                        <h1><span> Work </span></h1>\n                    </div>\n                    <div className = \"nine columns main-col\">\n                        {\n                            resumeData.work && resumeData.work.map((job, index) => {\n                                return (\n                                    <div className = \"row item\" key = {index}>\n                                        <div className = \"twelve columns\">\n                                            <h3> {job.CompanyName} </h3>\n                                            <p className = \"info\">\n                                                {job.Title}\n                                                <span> &bull; </span><em className=\"date\">{job.MonthOfStarting} {job.YearOfStarting} - {job.MonthOfLeaving} {job.YearOfLeaving}</em>\n                                            </p>\n                                            <ul className = \"job-description dashed\">\n                                                {\n                                                    job.Description && job.Description.map((descText, index) => {\n                                                        return (\n                                                            <li key = {index}>\n                                                                {descText}\n                                                            </li>\n                                                        );\n                                                    })\n                                                }\n                                            </ul>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className = \"row skill\">\n                    <div className = \"three columns header-col\">\n                        <h1><span> Skills </span></h1>\n                    </div>\n                    <div className = \"nine columns main-col\">\n                        <p> {resumeData.skillsDescription} </p>\n                        <div className = \"bars\">\n                            <ul className = \"skills\">\n                                {\n                                    resumeData.skills && resumeData.skills.map((skill, index) => {\n                                        return (\n                                            <li key = {index}>\n                                                <span className = {`bar-expand ${skill.toLowerCase()}`}></span><em>{skill}</em>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React, {\n    Component\n} from 'react';\nexport default class Porfolio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"test\",\n            description: \"test\",\n            longDescription: []\n        };\n    }\n\n    changeModal(params) {\n        let {\n            name,\n            description,\n            longDescription\n        } = params;\n        this.setState({\n            name: name,\n            description: description,\n            longDescription: longDescription\n        });\n    }\n\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id = \"portfolio\">\n                <div className = \"row\">\n                    <div className = \"twelve columns collapsed\">\n                        <h1> Check Out Some of My Works. </h1>\n                        <div id = \"portfolio-wrapper\" className = \"bgrid-quarters s-bgrid-thirds cf\">\n                            {\n                                resumeData.portfolio && resumeData.portfolio.map((item, index) => {\n                                    return (\n                                        <div className = \"columns portfolio-item\" key = {index}>\n                                            <div className = \"item-wrap\">\n                                                <a href = \"#portfolioModal\" onClick = {() => this.changeModal({name: item.name, description: item.description, longDescription: item.longDescription})}>\n                                                    <img src={`${item.imgUrl}`} className=\"item-img\"/>\n                                                    <div className = \"overlay\">\n                                                        <div className = \"portfolio-item-meta\">\n                                                            <h5> {item.name} </h5>\n                                                            <p> {item.description} </p>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div id = \"portfolioModal\" className = \"popup-modal mfp-hide\">\n                    <i className = \"fa fa-times close\" aria-hidden=\"true\"></i>\n                    <div className = \"description-box\">\n                        <h4> {this.state.name} </h4>\n                        <p> {this.state.description} </p>\n                        <ul className = \"description-list dashed\">\n                            {\n                                this.state.longDescription && this.state.longDescription.map((desc, index) => {\n                                    return (\n                                        <li key = {index}>\n                                            <em> {desc} </em>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nexport default class Contact extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id = \"contact\">\n                <div className = \"row section-head\">\n                    <div className = \"ten columns\">\n                        <p className = \"lead\">\n                            Feel free to contact me for any work or suggestions below\n                        </p>\n                    </div>\n                </div>\n                <div className = \"row\">\n                    <aside className = \"eigth columns footer-widgets\">\n                        <div className = \"widget\">\n                            <h4> Email: <a href = {`mailto:${resumeData.email}`}> peter.cardenas@utexas.edu </a></h4>\n                            <h4> LinkedIn: <a href = {resumeData.linkedIn}> {resumeData.linkedInId} </a></h4>\n                        </div>\n                    </aside>\n                </div>\n            </section>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nexport default class Footer extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <footer>\n                <div className = \"row\">\n                    <div className = \"twelve columns\">\n                        <ul className = \"social-links\">\n                            {\n                                resumeData.socialLinks && resumeData.socialLinks.map((link, index) => {\n                                    return (\n                                        <li key = {index}>\n                                            <a href = {link.url}>\n                                                <i className = {link.className}/>\n                                            </a>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <div id = \"go-top\">\n                        <a className = \"smoothscroll\" title = \"Back to Top\" href = \"#home\">\n                            <i className = \"icon-up-open\"/>\n                        </a>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}","let resumeData = {\n  imagebaseurl: \"https://petercardenas.github.io/\",\n  name: \"Peter Cardenas\",\n  linkedInId: \"peter-cardenas\",\n  linkedIn: \"https://www.linkedin.com/in/peter-cardenas/\",\n  skypeid: \"petercardenas441\",\n  roleDescription:\n    \"I am a fervent learner and engineer, and I desire to work with others who share my passion for technology and innovation. I am currently experienced in full-stack development, with an emphasis in backend architecture. Currently looking for software engineer internships.\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/peter-cardenas/\",\n      className: \"fa fa-linkedin\"\n    },\n    {\n      name: \"github\",\n      url: \"https://github.com/PeterCardenas\",\n      className: \"fa fa-github\"\n    },\n    {\n      name: \"email\",\n      url: \"mailto:peter.cardenas@utexas.edu\",\n      className: \"fa fa-envelope\"\n    }\n  ],\n  about: \"I am currently a freshman at the University of Texas at Austin. I love creating and learning new things, especially in regards to Computer Science. In my free time, I like play the violin, watch movies, and go jogging.\",\n  email: \"peter.cardenas@utexas.edu\",\n  education: [\n    {\n      UniversityName: \"The University of Texas at Austin\",\n      Major: \"Bachelor of Science in Computer Science\",\n      MonthOfStarting: \"Aug\",\n      YearOfStarting: \"2019\",\n      MonthOfPassing: \"Present\",\n      YearOfPassing: \"\"\n    }\n  ],\n  work: [\n    {\n      CompanyName: \"7-Eleven, Inc.\",\n      Title: \"Software Engineer Intern\",\n      MonthOfStarting: \"May\",\n      YearOfStarting: \"2019\",\n      MonthOfLeaving: \"Aug\",\n      YearOfLeaving: \"2019\",\n      Description: [\n        \"Collaborated in a 3-intern pod to develop a customer facing React Native application with a Git version control system as beach-head to new customer market\",\n        \"Conceptualized, architected, and developed complete backend for entire React Native Application\",\n        \"Leveraged a NodeJS version of the OpenCV library to create a unique customer engagement experience using computer vision\",\n        \"Architected front-end, including animations, actively iterating alongside UX and Design team\",\n        \"Explored back-end and large-scale database technologies such as NodeJS and MongoDB\",\n        \"Presented to company executive and senior VP’s on future business impact of product, resulting in senior leadership alignment to scale project to broader US market via integration with 7Rewards app\",\n        \"Employed Scrum and Agile methodologies, while incorporating Design Thinking and Lean Experimentation to validate product hypotheses\",\n        \"Deployed server on AWS EC2 Instance and stored video and image data on S3 Storage\",\n        \"Developed APIs for real time video streaming on multiple user devices from S3 Storage\"\n      ]\n    },\n    {\n      CompanyName: \"Daisuki Coaching\",\n      Title: \"App Developer Intern\",\n      MonthOfStarting: \"Jun\",\n      YearOfStarting: \"2019\",\n      MonthOfLeaving: \"Sep\",\n      YearOfLeaving: \"2018\",\n      Description: [\n        \"Aided in the development of an asset portfolio application using C# with Xamarin.Forms\",\n        \"Implemented Syncfusion library for the creation of charts and graphs\",\n        \"Styled and edited on front-end using XAML\",\n        \"Performed manual QA on several devices for compatibility testing\"\n      ]\n    }\n  ],\n  skillsDescription: \"\",\n  skills: [\"HTML5\", \"CSS\", \"ReactJS\", \"C#\", \"NodeJS\", \"Java\"],\n  portfolio: [\n    {\n      name: \"Model Scheduler\",\n      description: \"PHP Web Application\",\n      longDescription: [\n        \"Aided in the development of the scheduling application for the new scheduling system which would serve the Allen High School population of over 4,700 students\",\n        \"Applied knowledge of MySQL, JavaScript with JQuery, CSS, HTML, and PHP throughout the application\",\n        \"Performed and analyzed several rounds of constructive user testing\"\n      ],\n      imgUrl: \"images/portfolio/schedule.jpg\"\n    },\n    {\n      name: \"Music Sequencer\",\n      description: \"NodeJS Web Application\",\n      longDescription: [\n        \"Developing a music sequencer web application with NodeJS, HTML, CSS, and JavaScript with JQuery\",\n        \"Hosting with Heroku with a PostgreSQL database for user storage\",\n        \"Used Wavesurfer.js library for audio manipulation and display\"\n      ],\n      imgUrl: \"images/portfolio/music.jpg\"\n    },\n    {\n      name: \"Ping Pong Competitive Website\",\n      description: \"Web Application with Firebase\",\n      longDescription: [\n        \"Developed club website hosted with GitHub Pages with ranking system\",\n        \"Applied knowledge of JavaScript with JQuery, CSS, and HTML\",\n        \"Used Firebase NoSQL database to store and live update rankings\"\n      ],\n      imgUrl: \"images/portfolio/ping_pong.jpg\"\n    },\n    {\n        name: \"Digital Card Game\",\n        description: \"Unity Multiplayer Game\",\n        longDescription: [\n            \"Developed an original card game using the Unity Game Engine\",\n            \"Implemented the Unity Networking API for state synchronization and remote procedure calls\",\n            \"Used Object Oriented Programming concepts for players and player objects\"\n        ],\n        imgUrl: \"images/portfolio/card.jpg\"\n    },\n    {\n      name: \"Portfolio Website\",\n      description: \"ReactJS Web Application\",\n      longDescription: [\n        \"Developed portfolio website using ReactJS framework hosted on GitHub Pages\",\n        \"Optimized JSX and CSS for styling purposes\",\n        \"Used Magnific Popup library to handle modals along with state management\"\n      ],\n      imgUrl: \"images/portfolio/portfolio.jpg\"\n    }\n  ]\n};\nexport default resumeData;\n","import React, {\n    Component\n} from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport resumeData from './resume_data';\nclass App extends Component {\n    render() {\n        return (\n            <div className = \"App\" >\n                <Header\n                    resumeData = {resumeData}\n                />\n                <About\n                    resumeData = {resumeData}\n                />\n                <Resume\n                    resumeData = {resumeData}\n                />\n                <Portfolio\n                    resumeData = {resumeData}\n                />\n                <Contact\n                    resumeData = {resumeData}\n                />\n                <Footer\n                    resumeData = {resumeData}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './service_worker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}