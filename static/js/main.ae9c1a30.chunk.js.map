{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Contact.js","components/Footer.js","App.js","service_worker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","roleDescription","socialLinks","map","link","key","url","target","rel","Component","About","src","alt","about","email","linkedIn","Job","job","index","useState","open","setOpen","companyName","monthOfStarting","yearOfStarting","monthOfLeaving","yearOfLeaving","Button","as","onClick","isOpened","ListGroup","description","descText","Item","Resume","education","universityName","major","monthOfPassing","yearOfPassing","actualGpa","maxGpa","work","skillsDescription","skills","skill","toLowerCase","Porfolio","state","longDescription","linkUrl","params","setState","portfolio","item","changeModal","imgUrl","aria-hidden","desc","Contact","linkedInId","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae9c1a30.chunk.js","sourcesContent":["/* eslint-disable no-script-url */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n    Component\n} from 'react';\nexport default class Header extends Component {\n\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <React.Fragment>\n                <header id = \"home\" >\n                    <nav id = \"nav-wrap\">\n                        <a className = \"mobile-btn\" href = \"#nav-wrap\" title = \"Show navigation\"> Show navigation </a>\n                        <a className = \"mobile-btn\" href = \"#nowhere\" title = \"Hide navigation\"> Hide navigation </a>\n                        <ul id = \"nav\" className = \"nav\">\n                            <li className = \"current\">\n                                <a id = \"homeLink\" className = \"smoothscroll\" href = \"#home\"> Home </a>\n                            </li>\n                            <li>\n                                <a id = \"aboutLink\" className = \"smoothscroll\" href = \"#about\"> About </a>\n                            </li>\n                            <li>\n                                <a id = \"resumeLink\" className = \"smoothscroll\" href = \"#resume\"> Resume </a>\n                            </li>\n                            <li>\n                                <a id = \"portfolioLink\" className = \"smoothscroll\" href = \"#portfolio\"> Works </a>\n                            </li>\n                            <li>\n                                <a id = \"contactLink\" className = \"smoothscroll\" href = \"#contact\"> Contact </a>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <div className = \"row banner\">\n                        <div className = \"banner-text\">\n                            <h1 className = \"responsive-headline\" > {resumeData.name} </h1>\n                            <h3\n                                style = {\n                                    {\n                                        color: '#fff',\n                                        fontFamily: 'sans-serif'\n                                    }\n                                }\n                            >\n                                {resumeData.roleDescription}\n                            </h3>\n                            <hr/>\n                            <ul className = \"social\">\n                                {\n                                    resumeData.socialLinks && resumeData.socialLinks.map(link => {\n                                        return (\n                                            <li key = {link.name}>\n                                                <a href = {link.url} target = \"_blank\" rel=\"noopener noreferrer\">\n                                                    <i className = {link.className} > </i>\n                                                </a>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </div>\n\n                    <p className = \"scrolldown\">\n                        <a className = \"smoothscroll\" href = \"#about\">\n                            <i className = \"icon-down-circle\"> </i>\n                        </a>\n                    </p>\n\n                </header>\n            </React.Fragment>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nexport default class About extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id = \"about\">\n                <div className = \"row\">\n                    <div className = \"three columns\">\n                        <img className = \"profile-pic\" src = \"images/profilepic.jpg\" alt = \"\" />\n                    </div>\n                    <div className = \"nine columns main-col\">\n                        <h2> About Me </h2>\n                        <p> {resumeData.about} </p>\n                        <div className = \"row\">\n                            <div className = \"columns contact-details\">\n                                <h2> Contact Details </h2>\n                                <p className = \"address\">\n                                    <span> {resumeData.name} </span><br></br>\n                                    <span><a href = {`mailto:${resumeData.email}`} target = \"_blank\" rel=\"noopener noreferrer\"> {resumeData.email} </a></span><br/>\n                                    <span><a href = {resumeData.linkedIn} target = \"_blank\" rel=\"noopener noreferrer\"> {resumeData.linkedIn} </a></span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, {\n    Component,\n    useState\n} from 'react';\nimport { Button, ListGroup } from 'react-bootstrap';\nimport { Collapse } from 'react-collapse';\n\nconst Job = ({\n    job,\n    index\n}) => {\n    const [open, setOpen] = useState(false);\n    return (\n        <div className=\"row item\" key={index}>\n            <div className=\"twelve columns\">\n                <h3> {job.companyName} </h3>\n                <p className=\"info\">\n                    {job.title}\n                    <span> &bull; </span><em className=\"date\">{job.monthOfStarting} {job.yearOfStarting} - {job.monthOfLeaving} {job.yearOfLeaving}</em>\n                </p>\n                <Button\n                    as=\"a\"\n                    onClick={() => setOpen(!open)}\n                    className=\"collapse-title\"\n                >\n                    {open ? 'Hide ' : 'View '} contribution details\n                </Button>\n                <Collapse isOpened={open}>\n                    <ListGroup as=\"ul\" className=\"job-description dashed\">\n                        {\n                            job.description && job.description.map((descText, index) => {\n                                return (\n                                    <ListGroup.Item as=\"li\" key={index}>\n                                        {descText}\n                                    </ListGroup.Item>\n                                );\n                            })\n                        }\n                    </ListGroup>\n                </Collapse>\n            </div>\n        </div>\n    );\n};\n\nexport default class Resume extends Component {\n\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"resume\">\n                <div className=\"row education\">\n                    <div className=\"three columns header-col\">\n                        <h1><span> Resume </span></h1>\n                    </div>\n                    <div className=\"nine columns main-col\">\n                        <a href={resumeData.link} target=\"_blank\" rel=\"noopener noreferrer\">Resume PDF Link</a>\n                    </div>\n                </div>\n                <div className=\"row education\">\n                    <div className=\"three columns header-col\">\n                        <h1><span> Education </span></h1>\n                    </div>\n                    <div className=\"nine columns main-col\">\n                        {\n                            resumeData.education && resumeData.education.map((education, index) => {\n                                return (\n                                    <div className=\"row item\" key={index}>\n                                        <div className=\"twelve columns\">\n                                            <h3> {education.universityName} </h3>\n                                            <p className=\"info\">\n                                                {education.major}\n                                                <span> &bull; </span>\n                                                <em className=\"date\">{education.monthOfStarting} {education.yearOfStarting} - {education.monthOfPassing} {education.yearOfPassing}</em>\n                                                <span> &bull; </span>\n                                                <em className=\"gpa\">{education.actualGpa} / {education.maxGpa}</em>\n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"row work\">\n                    <div className=\"three columns header-col\">\n                        <h1><span> Work </span></h1>\n                    </div>\n                    <div className=\"nine columns main-col\">\n                        {\n                            resumeData.work && resumeData.work.map((job, index) => {\n                                return (\n                                    <Job job={job} index={index} />\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"row skill\">\n                    <div className=\"three columns header-col\">\n                        <h1><span> Skills </span></h1>\n                    </div>\n                    <div className=\"nine columns main-col\">\n                        <p> {resumeData.skillsDescription} </p>\n                        <div className=\"bars\">\n                            <ul className=\"skills\">\n                                {\n                                    resumeData.skills && resumeData.skills.map((skill, index) => {\n                                        return (\n                                            <li key={index}>\n                                                <span className={`bar-expand ${skill.toLowerCase()}`}></span><em>{skill}</em>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React, {\n    Component\n} from 'react';\nexport default class Porfolio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"test\",\n            description: \"test\",\n            longDescription: [],\n            linkUrl: \"test\",\n        };\n    }\n\n    changeModal(params) {\n        let {\n            name,\n            description,\n            longDescription,\n            linkUrl,\n        } = params;\n        this.setState({\n            name,\n            description,\n            longDescription,\n            linkUrl\n        });\n    }\n\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"portfolio\">\n                <div className=\"row\">\n                    <div className=\"twelve columns collapsed\">\n                        <h1> Check Out Some of My Works. </h1>\n                        <div\n                            id=\"portfolio-wrapper\"\n                            className=\"bgrid-quarters s-bgrid-thirds cf\"\n                        >\n                            {resumeData.portfolio &&\n                                resumeData.portfolio.map((item, index) => {\n                                    return (\n                                        <div className=\"columns portfolio-item\" key={index}>\n                                            <div className=\"item-wrap\">\n                                                <a\n                                                    href=\"#portfolioModal\"\n                                                    onClick={() => this.changeModal(item)}\n                                                >\n                                                    <img\n                                                        src={`${item.imgUrl}`}\n                                                        className=\"item-img\"\n                                                    />\n                                                    <div className=\"overlay\">\n                                                        <div className=\"portfolio-item-meta\">\n                                                            <h5> {item.name} </h5>\n                                                            <p> {item.description} </p>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                        </div>\n                    </div>\n                </div>\n                <div id=\"portfolioModal\" className=\"popup-modal mfp-hide\">\n                    <i className=\"fa fa-times close\" aria-hidden=\"true\"></i>\n                    <div className=\"description-box\">\n                        {\n                            this.state.linkUrl ? (\n                                <a\n                                    href={this.state.linkUrl}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <h4> {this.state.name} </h4>\n                                </a>\n                            ) : null\n                        }\n                        <p> {this.state.description} </p>\n                        <ul className=\"description-list dashed\">\n                            {this.state.longDescription &&\n                                this.state.longDescription.map((desc, index) => {\n                                    return (\n                                        <li key={index}>\n                                            <em> {desc} </em>\n                                        </li>\n                                    );\n                                })}\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n","import React, {\n    Component\n} from 'react';\nexport default class Contact extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id = \"contact\">\n                <div className = \"row section-head\">\n                    <div className = \"ten columns\">\n                        <p className = \"lead\">\n                            Feel free to contact me for any work or suggestions below\n                        </p>\n                    </div>\n                </div>\n                <div className = \"row\">\n                    <aside className = \"eigth columns footer-widgets\">\n                        <div className = \"widget\">\n                            <h4> Email: <a href = {`mailto:${resumeData.email}`} target = \"_blank\" rel=\"noopener noreferrer\"> peter.cardenas@utexas.edu </a></h4>\n                            <h4> LinkedIn: <a href = {resumeData.linkedIn} target = \"_blank\" rel=\"noopener noreferrer\"> {resumeData.linkedInId} </a></h4>\n                        </div>\n                    </aside>\n                </div>\n            </section>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nexport default class Footer extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <footer>\n                <div className = \"row\">\n                    <div className = \"twelve columns\">\n                        <ul className = \"social-links\">\n                            {\n                                resumeData.socialLinks && resumeData.socialLinks.map((link, index) => {\n                                    return (\n                                        <li key = {index}>\n                                            <a href = {link.url} target = \"_blank\" rel=\"noopener noreferrer\">\n                                                <i className = {link.className}/>\n                                            </a>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <div id = \"go-top\">\n                        <a className = \"smoothscroll\" title = \"Back to Top\" href = \"#home\">\n                            <i className = \"icon-up-open\"/>\n                        </a>\n                    </div>\n                    <div className = \"copyright\">\n                        <p> Copyright © 2020 by Peter Cardenas</p>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}","import React, {\n    Component\n} from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport resumeData from './resume_data';\nclass App extends Component {\n    render() {\n        return (\n            <div className = \"App\" >\n                <Header\n                    resumeData = {resumeData}\n                />\n                <About\n                    resumeData = {resumeData}\n                />\n                <Resume\n                    resumeData = {resumeData}\n                />\n                <Portfolio\n                    resumeData = {resumeData}\n                />\n                <Contact\n                    resumeData = {resumeData}\n                />\n                <Footer\n                    resumeData = {resumeData}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './service_worker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}